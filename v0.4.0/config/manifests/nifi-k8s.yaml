---
# NiFi Namespace (already created by cluster setup, but included for completeness)
apiVersion: v1
kind: Namespace
metadata:
  name: infometis
---
# NiFi PersistentVolumeClaims for data persistence
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-content-repository
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-database-repository
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-flowfile-repository
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-provenance-repository
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 3Gi
---
# NiFi ConfigMap for configuration (removed - using environment variables instead)
---
# NiFi Service
apiVersion: v1
kind: Service
metadata:
  name: nifi-service
  namespace: infometis
  labels:
    app: nifi
spec:
  selector:
    app: nifi
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
---
# NiFi StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
  namespace: infometis
  labels:
    app: nifi
spec:
  serviceName: nifi-service
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      containers:
      - name: nifi
        image: apache/nifi:1.23.2
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NIFI_WEB_HTTP_PORT
          value: "8080"
        - name: NIFI_WEB_HTTP_HOST
          value: "0.0.0.0"
        - name: SINGLE_USER_CREDENTIALS_USERNAME
          value: "admin"
        - name: SINGLE_USER_CREDENTIALS_PASSWORD
          value: "adminadminadmin"
        - name: NIFI_SENSITIVE_PROPS_KEY
          value: "changeme1234567890A"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        volumeMounts:
        - name: nifi-content-repository
          mountPath: /opt/nifi/nifi-current/content_repository
        - name: nifi-database-repository
          mountPath: /opt/nifi/nifi-current/database_repository
        - name: nifi-flowfile-repository
          mountPath: /opt/nifi/nifi-current/flowfile_repository
        - name: nifi-provenance-repository
          mountPath: /opt/nifi/nifi-current/provenance_repository
        readinessProbe:
          httpGet:
            path: /nifi/
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /nifi/
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: nifi-content-repository
        persistentVolumeClaim:
          claimName: nifi-content-repository
      - name: nifi-database-repository
        persistentVolumeClaim:
          claimName: nifi-database-repository
      - name: nifi-flowfile-repository
        persistentVolumeClaim:
          claimName: nifi-flowfile-repository
      - name: nifi-provenance-repository
        persistentVolumeClaim:
          claimName: nifi-provenance-repository
      restartPolicy: Always