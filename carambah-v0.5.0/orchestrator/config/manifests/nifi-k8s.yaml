---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nifi-content-pv
  labels:
    app.kubernetes.io/part-of: infometis
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /var/lib/k0s/nifi-content-data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nifi-database-pv
  labels:
    app.kubernetes.io/part-of: infometis
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /var/lib/k0s/nifi-database-data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nifi-flowfile-pv
  labels:
    app.kubernetes.io/part-of: infometis
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /var/lib/k0s/nifi-flowfile-data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nifi-provenance-pv
  labels:
    app.kubernetes.io/part-of: infometis
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /var/lib/k0s/nifi-provenance-data
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-content-repository
  namespace: infometis
  labels:
    app: nifi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-database-repository
  namespace: infometis
  labels:
    app: nifi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-flowfile-repository
  namespace: infometis
  labels:
    app: nifi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nifi-provenance-repository
  namespace: infometis
  labels:
    app: nifi  
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: Service
metadata:
  name: nifi-service
  namespace: infometis
  labels:
    app: nifi
spec:
  selector:
    app: nifi
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
  namespace: infometis
  labels:
    app: nifi
    version: v0.4.0
spec:
  serviceName: nifi-service
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      containers:
      - name: nifi
        image: apache/nifi:1.23.2
        imagePullPolicy: Never
        env:
        - name: NIFI_WEB_HTTP_PORT
          value: "8080"
        - name: NIFI_WEB_HTTP_HOST
          value: "0.0.0.0"
        - name: SINGLE_USER_CREDENTIALS_USERNAME
          value: "admin"
        - name: SINGLE_USER_CREDENTIALS_PASSWORD
          value: "infometis2024"
        - name: NIFI_SENSITIVE_PROPS_KEY
          value: "changeme1234567890A"
        ports:
        - name: http
          containerPort: 8080
        volumeMounts:
        - name: nifi-content-repository
          mountPath: /opt/nifi/nifi-current/content_repository
        - name: nifi-database-repository
          mountPath: /opt/nifi/nifi-current/database_repository
        - name: nifi-flowfile-repository
          mountPath: /opt/nifi/nifi-current/flowfile_repository
        - name: nifi-provenance-repository
          mountPath: /opt/nifi/nifi-current/provenance_repository
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        readinessProbe:
          httpGet:
            path: /nifi/
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /nifi/
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: nifi-content-repository
        persistentVolumeClaim:
          claimName: nifi-content-repository
      - name: nifi-database-repository
        persistentVolumeClaim:
          claimName: nifi-database-repository
      - name: nifi-flowfile-repository
        persistentVolumeClaim:
          claimName: nifi-flowfile-repository
      - name: nifi-provenance-repository
        persistentVolumeClaim:
          claimName: nifi-provenance-repository
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nifi-ingress
  namespace: infometis
  labels:
    app: nifi
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: localhost
    http:
      paths:
      - path: /nifi
        pathType: Prefix
        backend:
          service:
            name: nifi-service
            port:
              number: 8080