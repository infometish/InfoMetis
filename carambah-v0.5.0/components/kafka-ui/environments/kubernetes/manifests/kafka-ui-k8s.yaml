---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: infometis
  labels:
    app: kafka-ui
    app.kubernetes.io/part-of: infometis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        imagePullPolicy: Never
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: "infometis-kafka"
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: "kafka-service:9092"
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: "/kafka-ui"
        - name: DYNAMIC_CONFIG_ENABLED
          value: "true"
        ports:
        - name: ui
          containerPort: 8080
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /kafka-ui/actuator/health
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /kafka-ui/actuator/health
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 30
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui-service
  namespace: infometis
  labels:
    app: kafka-ui
    app.kubernetes.io/part-of: infometis
spec:
  selector:
    app: kafka-ui
  ports:
  - name: ui
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-ui-ingress
  namespace: infometis
  labels:
    app: kafka-ui
    app.kubernetes.io/part-of: infometis
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - http:
      paths:
      - path: /kafka-ui
        pathType: Prefix
        backend:
          service:
            name: kafka-ui-service
            port:
              number: 8080