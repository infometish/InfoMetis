# InfoMetis v0.5.0 - Alertmanager Configuration
# Default configuration for Prometheus Alertmanager

global:
  # SMTP configuration for email notifications
  smtp_smarthost: 'localhost:587'
  smtp_from: 'infometis@localhost'
  smtp_auth_username: ''
  smtp_auth_password: ''
  smtp_require_tls: false

# Route tree for organizing alerts
route:
  # How to group alerts
  group_by: ['alertname', 'cluster', 'service']
  
  # Time to wait before sending notification for new group
  group_wait: 10s
  
  # Time to wait before sending notification about new alerts in existing group  
  group_interval: 10s
  
  # Time to wait before sending repeated notification
  repeat_interval: 1h
  
  # Default receiver
  receiver: 'web.hook'
  
  # Specific routes for different alert types
  routes:
  - match:
      severity: critical
    receiver: 'critical-alerts'
    group_wait: 5s
    repeat_interval: 30m
  
  - match:
      severity: warning  
    receiver: 'warning-alerts'
    group_wait: 15s
    repeat_interval: 2h

# Notification receivers
receivers:
- name: 'web.hook'
  webhook_configs:
  - url: 'http://localhost:5001/webhook'
    send_resolved: true
    http_config:
      bearer_token: ''

- name: 'critical-alerts'
  webhook_configs:
  - url: 'http://localhost:5001/webhook/critical'
    send_resolved: true
    title: 'InfoMetis Critical Alert'
  # Example email configuration (commented out)
  # email_configs:
  # - to: 'admin@infometis.localhost'
  #   subject: 'InfoMetis Critical Alert: {{ .GroupLabels.alertname }}'
  #   body: |
  #     {{ range .Alerts }}
  #     Alert: {{ .Annotations.summary }}
  #     Description: {{ .Annotations.description }}
  #     {{ end }}

- name: 'warning-alerts'  
  webhook_configs:
  - url: 'http://localhost:5001/webhook/warning'
    send_resolved: true
    title: 'InfoMetis Warning Alert'

# Inhibition rules to prevent spam
inhibit_rules:
# Inhibit warning alerts if critical alert is firing for same service
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  equal: ['alertname', 'cluster', 'service']

# Inhibit all alerts if InfoMetis is down
- source_match:
    alertname: 'InfoMetisDown'
  target_match_re:
    service: '.*'
  equal: ['cluster']