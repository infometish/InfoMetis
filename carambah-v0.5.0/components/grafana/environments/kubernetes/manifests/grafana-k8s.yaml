---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
  labels:
    app.kubernetes.io/part-of: infometis
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  hostPath:
    path: /var/lib/infometis/grafana
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: infometis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: infometis
data:
  grafana.ini: |
    [server]
    http_port = 3000
    domain = localhost
    root_url = http://localhost/grafana/
    serve_from_sub_path = true

    [security]
    admin_user = admin
    admin_password = infometis2024

    [auth]
    disable_login_form = false

    [auth.anonymous]
    enabled = false

    [dashboards]
    default_home_dashboard_path = /var/lib/grafana/dashboards/infometis-overview.json

    [paths]
    data = /var/lib/grafana
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: infometis
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Elasticsearch
      type: elasticsearch
      access: proxy
      url: http://elasticsearch-service:9200
      database: "[logstash-]YYYY.MM.DD"
      basicAuth: false
      isDefault: true
      jsonData:
        interval: Daily
        esVersion: "8.0.0"
        timeField: "@timestamp"
        logMessageField: message
        logLevelField: level
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: infometis
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox:1.35
        command: ['sh', '-c', 'chown -R 472:472 /var/lib/grafana && chmod -R 755 /var/lib/grafana']
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        securityContext:
          runAsUser: 0
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        imagePullPolicy: Never
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "infometis2024"
        - name: GF_SERVER_ROOT_URL
          value: "http://localhost/grafana/"
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"
        ports:
        - name: grafana
          containerPort: 3000
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
          subPath: datasources.yaml
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 30
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: infometis
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - name: grafana
    port: 3000
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: infometis
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000