# InfoMetis v0.5.0 - ksqlDB Kubernetes Deployment
# Deploys ksqlDB Server and CLI for SQL-based stream processing

apiVersion: v1
kind: Namespace
metadata:
  name: infometis
  labels:
    app.kubernetes.io/name: infometis
---
# ksqlDB Server ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: ksqldb-server-config
  namespace: infometis
  labels:
    app: ksqldb-server
    app.kubernetes.io/part-of: infometis
data:
  ksqldb-server.properties: |
    bootstrap.servers=kafka-service:9092
    listeners=http://0.0.0.0:8088
    ksql.schema.registry.url=http://schema-registry-service:8081
    ksql.logging.processing.topic.auto.create=true
    ksql.logging.processing.stream.auto.create=true
    ksql.connect.url=http://kafka-connect-service:8083
    ksql.service.id=infometis_ksqldb_
    ksql.streams.auto.offset.reset=earliest
    ksql.streams.commit.interval.ms=2000
    ksql.streams.cache.max.bytes.buffering=10000000
    ksql.streams.num.stream.threads=4
---
# ksqlDB Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-server
  namespace: infometis
  labels:
    app: ksqldb-server
    app.kubernetes.io/part-of: infometis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb-server
  template:
    metadata:
      labels:
        app: ksqldb-server
        app.kubernetes.io/part-of: infometis
    spec:
      containers:
      - name: ksqldb-server
        image: confluentinc/ksqldb-server:0.29.0
        imagePullPolicy: Never
        ports:
        - containerPort: 8088
          name: http
        env:
        - name: KSQL_CONFIG_DIR
          value: "/etc/ksqldb"
        - name: KSQL_BOOTSTRAP_SERVERS
          value: "kafka-service:9092"
        - name: KSQL_HOST_NAME
          value: "ksqldb-server"
        - name: KSQL_LISTENERS
          value: "http://0.0.0.0:8088"
        - name: KSQL_CACHE_MAX_BYTES_BUFFERING
          value: "0"
        - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
          value: "http://schema-registry-service:8081"
        - name: KSQL_PRODUCER_INTERCEPTOR_CLASSES
          value: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
        - name: KSQL_CONSUMER_INTERCEPTOR_CLASSES
          value: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        - name: KSQL_KSQL_CONNECT_URL
          value: "http://kafka-connect-service:8083"
        - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
          value: "true"
        - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
          value: "true"
        volumeMounts:
        - name: ksqldb-config
          mountPath: /etc/ksqldb
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /info
            port: 8088
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /info
            port: 8088
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: ksqldb-config
        configMap:
          name: ksqldb-server-config
---
# ksqlDB Server Service
apiVersion: v1
kind: Service
metadata:
  name: ksqldb-server-service
  namespace: infometis
  labels:
    app: ksqldb-server
    app.kubernetes.io/part-of: infometis
spec:
  type: ClusterIP
  ports:
  - port: 8088
    targetPort: 8088
    protocol: TCP
    name: http
  selector:
    app: ksqldb-server
---
# ksqlDB CLI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ksqldb-cli
  namespace: infometis
  labels:
    app: ksqldb-cli
    app.kubernetes.io/part-of: infometis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ksqldb-cli
  template:
    metadata:
      labels:
        app: ksqldb-cli
        app.kubernetes.io/part-of: infometis
    spec:
      containers:
      - name: ksqldb-cli
        image: confluentinc/ksqldb-cli:0.29.0
        imagePullPolicy: Never
        command: ["/bin/bash"]
        args: ["-c", "while true; do sleep 30; done;"]
        env:
        - name: KSQL_SERVER
          value: "http://ksqldb-server-service:8088"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        stdin: true
        tty: true
---
# ksqlDB CLI Service (for potential external access)
apiVersion: v1
kind: Service
metadata:
  name: ksqldb-cli-service
  namespace: infometis
  labels:
    app: ksqldb-cli
    app.kubernetes.io/part-of: infometis
spec:
  type: ClusterIP
  ports:
  - port: 8088
    targetPort: 8088
    protocol: TCP
    name: http
  selector:
    app: ksqldb-cli