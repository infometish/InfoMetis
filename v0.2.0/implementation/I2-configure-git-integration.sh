#!/bin/bash
set -eu

# InfoMetis v0.2.0 - Configure Git Integration
# Single concern: Setup Git integration for NiFi Registry

echo "üîó InfoMetis v0.2.0 - Configure Git Integration"
echo "=============================================="
echo "Configuring: Git integration for Registry flow versioning"
echo ""

# Check if Registry is running
echo "üîç Checking Registry deployment..."
if ! kubectl get deployment nifi-registry -n infometis >/dev/null 2>&1; then
    echo "‚ùå Registry not deployed. Run I1-deploy-registry.sh first"
    exit 1
fi

if ! kubectl get pods -n infometis -l app=nifi-registry | grep -q Running; then
    echo "‚ùå Registry not running. Check Registry deployment"
    exit 1
fi

echo "‚úÖ Registry deployment verified"

# Create Git repository directory in Registry container
echo ""
echo "üìÅ Setting up Git repository structure..."

kubectl exec -n infometis deployment/nifi-registry -- mkdir -p /opt/nifi-registry/nifi-registry-current/flow_storage/git

# Initialize Git repository
echo ""
echo "üîß Initializing Git repository..."

kubectl exec -n infometis deployment/nifi-registry -- bash -c "
cd /opt/nifi-registry/nifi-registry-current/flow_storage/git && \
git init && \
git config user.name 'InfoMetis Registry' && \
git config user.email 'registry@infometis.local' && \
echo '# InfoMetis Flow Registry' > README.md && \
echo 'This repository contains versioned NiFi flows managed by InfoMetis.' >> README.md && \
echo '' >> README.md && \
echo 'Generated by InfoMetis v0.2.0' >> README.md && \
git add README.md && \
git commit -m 'Initial commit: InfoMetis Flow Registry setup'
"

echo "‚úÖ Git repository initialized"

# Update Registry providers configuration
echo ""
echo "‚öôÔ∏è  Configuring Registry Git flow persistence provider..."

kubectl exec -n infometis deployment/nifi-registry -- bash -c "
cat > /opt/nifi-registry/nifi-registry-current/conf/providers.xml << 'EOF'
<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>
<providers>
    <flowPersistenceProvider>
        <class>org.apache.nifi.registry.provider.flow.git.GitFlowPersistenceProvider</class>
        <property name=\"Flow Storage Directory\">/opt/nifi-registry/nifi-registry-current/flow_storage/git</property>
        <property name=\"Remote To Push\"></property>
        <property name=\"Remote Access User\"></property>
        <property name=\"Remote Access Password\"></property>
    </flowPersistenceProvider>
    
    <extensionBundlePersistenceProvider>
        <class>org.apache.nifi.registry.provider.extension.FileSystemBundlePersistenceProvider</class>
        <property name=\"Extension Bundle Storage Directory\">/opt/nifi-registry/nifi-registry-current/extension_bundles</property>
    </extensionBundlePersistenceProvider>
    
    <metadataProvider>
        <class>org.apache.nifi.registry.provider.metadata.DatabaseMetadataProvider</class>
    </metadataProvider>
</providers>
EOF
"

echo "‚úÖ Git persistence provider configured"

# Create flow storage directory structure
echo ""
echo "üìÇ Creating flow storage directory structure..."

kubectl exec -n infometis deployment/nifi-registry -- bash -c "
mkdir -p /opt/nifi-registry/nifi-registry-current/flow_storage/git/flows && \
mkdir -p /opt/nifi-registry/nifi-registry-current/extension_bundles
"

# Set proper permissions
kubectl exec -n infometis deployment/nifi-registry -- bash -c "
chown -R nifi:nifi /opt/nifi-registry/nifi-registry-current/flow_storage && \
chown -R nifi:nifi /opt/nifi-registry/nifi-registry-current/extension_bundles
"

echo "‚úÖ Directory structure created"

# Restart Registry to apply configuration
echo ""
echo "üîÑ Restarting Registry to apply Git configuration..."

kubectl rollout restart deployment/nifi-registry -n infometis
kubectl rollout status deployment/nifi-registry -n infometis --timeout=300s

# Wait for Registry API to be responsive again
echo ""
echo "‚è≥ Waiting for Registry API to be responsive..."
max_attempts=20
attempt=0

while [ $attempt -lt $max_attempts ]; do
    if kubectl exec -n infometis deployment/nifi-registry -- curl -f http://localhost:18080/nifi-registry-api/buckets >/dev/null 2>&1; then
        echo "‚úÖ Registry API is responsive"
        break
    fi
    
    echo "  Attempt $((attempt + 1))/$max_attempts - waiting for Registry API..."
    sleep 15
    attempt=$((attempt + 1))
done

if [ $attempt -eq $max_attempts ]; then
    echo "‚ö†Ô∏è  Registry API may not be fully ready yet"
    exit 1
fi

# Verify Git integration
echo ""
echo "üîç Verifying Git integration..."

GIT_STATUS=$(kubectl exec -n infometis deployment/nifi-registry -- bash -c "
cd /opt/nifi-registry/nifi-registry-current/flow_storage/git && \
git status --porcelain
" || echo "ERROR")

if [[ "$GIT_STATUS" != "ERROR" ]]; then
    echo "‚úÖ Git integration verified"
    echo "   Repository status: Clean working directory"
else
    echo "‚ùå Git integration verification failed"
    exit 1
fi

echo ""
echo "üéâ Git Integration Configuration Complete!"
echo "========================================"
echo ""
echo "üìä Configuration Summary:"
echo "  ‚Ä¢ Git repository initialized in Registry"
echo "  ‚Ä¢ Flow persistence provider: GitFlowPersistenceProvider"
echo "  ‚Ä¢ Storage location: /opt/nifi-registry/nifi-registry-current/flow_storage/git"
echo "  ‚Ä¢ Git user: InfoMetis Registry <registry@infometis.local>"
echo ""
echo "üîß Git Repository Details:"
kubectl exec -n infometis deployment/nifi-registry -- bash -c "
cd /opt/nifi-registry/nifi-registry-current/flow_storage/git && \
echo '  ‚Ä¢ Branch: '$(git branch --show-current) && \
echo '  ‚Ä¢ Commits: '$(git rev-list --count HEAD) && \
echo '  ‚Ä¢ Last commit: '$(git log -1 --pretty=format:'%h - %s (%cr)')
"

echo ""
echo "üìã Next Steps:"
echo "  ./I3-configure-registry-nifi.sh     # Connect Registry to NiFi"
echo "  ./P1-create-test-pipeline.sh        # Create test pipeline"